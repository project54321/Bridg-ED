import { auth, database, ref, push, onValue, remove, update } from './firebase-init.js';
import { onAuthStateChanged } from "https://www.gstatic.com/firebasejs/9.22.1/firebase-auth.js";

const box = document.getElementById('card-box');
const flip = document.getElementById('flip');
const next = document.getElementById('next');
const prev = document.getElementById('prev');
const exit = document.getElementById('exit');

const setID = localStorage.getItem('study_set') || decodeURIComponent(location.hash.replace('#','')) || 'Untitled'; //Line Generated by ChatGPT

let cards = [];
let currentIndex = 0;
let flipped = false;

onAuthStateChanged(auth, user => {
    if(!user){
        alert("You must be logged in to view this page");
        window.location = "login.html";
        return;
    }

    const userID = user.uid;
    const termsInDB = ref(database, `${userID}/sets/${setID}/cards`);

    onValue(termsInDB, snapshot => {  //ChatGPT Used to Write and Debug onValue
        cards = [];
        snapshot.forEach(childSnap => {
            const data = childSnap.val();
            cards.push(data);
        });

        currentIndex = 0;
        flipped = false;
        card();
    });
});


function card(){
    if(cards.length === 0){
        box.textContent = "No cards in this set!";
        return;
    }
    const card = cards[currentIndex];
    box.textContent = flipped ? card.output : card.input;
}


flip.addEventListener('click', function(){
    flipped = !flipped;
    card();
});


function nextCard(){
    flipped = false;
    currentIndex++;
    if(currentIndex >= cards.length){
        box.textContent = "You've gone through all cards!";
        flip.disabled = false;
        next.disabled = true;
        prev.disabled = false;
    } else {
        card();
    }
}

function prevCard(){
    flipped = false;
    currentIndex--;
    if(currentIndex < 0){
        box.textContent = "Click next view cards!";
        flip.disabled = false;
        next.disabled = false;
        prev.disabled = true;
    } else {
        card();
    }
}

next.addEventListener('click', nextCard);
prev.addEventListener('click', prevCard);

exit.addEventListener('click', () => {   //ChatGPT Used for error handling
    try {
        localStorage.removeItem('study_set');
    } catch (e) {
    }
    window.location = 'set.html#' + encodeURIComponent(setID); //Chatgpt Used For encodeURIComponent
});
